Илья, доброе утро. Снова за помощью (если надоел-дай знать ибо иногда не замечаю)
Разработал и поддерживаю БД (клиент-сервер) где операторы на мастерданных привязывают адреса от поставщиков информации (много мусора и шума) к адресам в стандартах БД (т.е. по контрагентам у меня — 2 справочника со связью один ко многим: торговые точки в стандарте БД и торг.точки от поставщиков информации).
Т.е. группа адресов от поставщика информации (фактически это один адрес-просто пишут по разному+много шума) привязывается к одному адресу в стандарте БД. Это называется классификацией (т.е. объект от поставщика информации классифицируется в стандарте компании)
Таких уникальных адресов от поставщиков информации 130К.
Собираются на адреса в стандарте БД = 28К
Операторы могут косячить и привязать некоторые адреса поставщиков информации не к той группе.
Ситуация усугубляется тем что для снижения трудозатрат классификации я реализовал на клиенте алгоритмы автосвязи (автоматическая классификация новых объектов по ранее классифицированным при пороге уверенности выше Х%) на основе: feature extraction + нечеткий поиск. Отсюда усугубление проблемы: неверно привязанный адрес оператором тиражирует связь новых таких адресов (написанных чуть по-другому) в неправильную группу.
Для выявления таких ситуаций на стороне сервера написал ряд sql которые на основе разных косвенных признаков дают подозрительные группы (кластеры адресов): при этом большая часть кластеров не имеет реальных ошибок, меньшая часть (чисто на глаз, сколько реально, не известно) — имеет. Данная подвыборка сокращает объем анализа неправильно привязанных адресов: 918 кластеров (адресов в стандарте компании) на 8К адресов поставщиков информации (т.е. в среднем по 8,7 адресов на кластер).
Идея в том чтобы теперь найти аномальные адреса которые по расстоянию находятся далеко от остальных адресов этого кластера. Для этого достаточно знать широту и долготу каждого адреса в кластере
Посмотрел на гитхабе реализованные в R геокодеры к API Yandex карт: не очень подходят ибо возвращают только широту и долготу. Мне же необходимо к этому еще и степень «попадания» адреса в адрес от яндекса (метаобъект «precision» ответа API), формат адреса в стандарте Яндекса+ еще кое какие данные от него.
Так же хочется ничего не отправлять в яндекс если текст не похож на адрес а возвращать по такому «адресу»=NA (ибо у них есть лимит на количество ответов от одного IP в сутки). 
В итоге написал свою функцию геокодера с блэкджеком и прочими радостями. Работает нормально.
Теперь хочется ее распараллелить по 4 ядрам.
Собственно вопрос: почему код ниже не работает, можешь подсказать?